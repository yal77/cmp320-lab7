package jdbcgui;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author wissam
 */
public class AddEmployee extends javax.swing.JFrame {

    /**
     * Creates new form AddEmployee
     */
    myDBCon dbCon;
    ResultSet rs;

    public AddEmployee() {
        initComponents();
        this.setLocationRelativeTo(null); // center form in screen 
        // set all error labels to invisible
        lblEmpnoError.setVisible(false);
        lblEnameError.setVisible(false);
        lblJobError.setVisible(false);
        lblHiredateError.setVisible(false);
        lblSalaryError.setVisible(false);
        lblCommError.setVisible(false);

        try {//populate mgr and deptno combo boxes 
            // populate valid mgr numbers 
            dbCon = new myDBCon();
            rs = dbCon.executeStatement("SELECT empno FROM emp ORDER BY empno ASC");
            // populate mgr combo box
            while (rs.next()) {
                cmbMgr.addItem(rs.getString("empno"));
            }
            // get and populate valid department numbers 
            rs = dbCon.executeStatement("SELECT DISTINCT deptno, dname FROM dept ORDER BY deptno ASC");
            while (rs.next()) {
                cmbDeptno.addItem(rs.getString("deptno"));
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtEmpno = new javax.swing.JTextField();
        txtEname = new javax.swing.JTextField();
        txtJob = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        txtComm = new javax.swing.JTextField();
        cmbMgr = new javax.swing.JComboBox<>();
        cmbDeptno = new javax.swing.JComboBox<>();
        btnAddNewEmp = new javax.swing.JButton();
        ftxtHiredate = new javax.swing.JFormattedTextField();
        lblEmpnoError = new javax.swing.JLabel();
        lblJobError = new javax.swing.JLabel();
        lblEnameError = new javax.swing.JLabel();
        lblHiredateError = new javax.swing.JLabel();
        lblSalaryError = new javax.swing.JLabel();
        lblCommError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Employee");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add New Employee");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("EMPNO:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("ENAME:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("JOB:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("MGR:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("HIREDATE:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("SALARY:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("COMMISSION:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("DEPTNO:");

        txtEmpno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtEname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtJob.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJobActionPerformed(evt);
            }
        });

        txtSalary.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtComm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbMgr.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbDeptno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAddNewEmp.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnAddNewEmp.setText("Add New");
        btnAddNewEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewEmpActionPerformed(evt);
            }
        });

        ftxtHiredate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MMM-yyyy"))));
        ftxtHiredate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblEmpnoError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblEmpnoError.setForeground(new java.awt.Color(255, 0, 0));
        lblEmpnoError.setText("error label");

        lblJobError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblJobError.setForeground(new java.awt.Color(255, 0, 0));
        lblJobError.setText("error label");

        lblEnameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblEnameError.setForeground(new java.awt.Color(255, 0, 0));
        lblEnameError.setText("error label");

        lblHiredateError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblHiredateError.setForeground(new java.awt.Color(255, 0, 0));
        lblHiredateError.setText("error label");

        lblSalaryError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblSalaryError.setForeground(new java.awt.Color(255, 0, 0));
        lblSalaryError.setText("error label");

        lblCommError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblCommError.setForeground(new java.awt.Color(255, 0, 0));
        lblCommError.setText("error label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAddNewEmp)
                                    .addComponent(txtEname, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(txtJob)
                                    .addComponent(txtComm, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(txtSalary)
                                    .addComponent(cmbMgr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDeptno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ftxtHiredate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblEnameError, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(lblJobError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblHiredateError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblSalaryError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCommError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtEmpno, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEmpnoError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEmpno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmpnoError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEnameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblJobError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbMgr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHiredateError, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(ftxtHiredate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSalaryError))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCommError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(cmbDeptno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddNewEmp)
                .addGap(0, 34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJobActionPerformed

    // verify valid entry of integer values
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    // verify valid entry of double values
    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    void clearErrorLabels() { // clear all labels used to display error messages 
        lblEmpnoError.setText("");
        lblEmpnoError.setVisible(false);
        lblEnameError.setText("");
        lblEnameError.setVisible(false);
        lblJobError.setText("");
        lblJobError.setVisible(false);
        lblHiredateError.setText("");
        lblHiredateError.setVisible(false);
        lblSalaryError.setText("");
        lblSalaryError.setVisible(false);
        lblCommError.setText("");
        lblCommError.setVisible(false);
    }

    // validate all user entry before sending new employee details to DB
    boolean isValidData() {
        clearErrorLabels();
        boolean result = true; // assume all details are true, set to false if otherwise 
        // you need to check format deails and make sure they are consistent with DB 
        if (txtEmpno.getText().trim().isEmpty() || !isInteger(txtEmpno.getText().trim())) {
            if (txtEmpno.getText().trim().isEmpty()) {
                lblEmpnoError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtEmpno.getText().trim())) {
                lblEmpnoError.setText("Invalid. Must be integer.");
            }
            lblEmpnoError.setVisible(true);
            result = false;
        }

        if (txtEname.getText().trim().isEmpty() || (txtEname.getText().trim().length() > 10)) {
            if (txtEname.getText().trim().isEmpty()) {
                lblEnameError.setText("Invalid. Cannot be empty.");
            } else if ((txtEname.getText().trim().length() > 10)) {
                lblEnameError.setText("Invalid. Must be < 10 chars.");
            }
            lblEnameError.setVisible(true);
            result = false;
        }

        if (txtJob.getText().trim().isEmpty() || (txtJob.getText().trim().length() > 9)) {
            if (txtJob.getText().trim().isEmpty()) {
                lblJobError.setText("Invalid. Cannot be empty.");
            } else if (txtJob.getText().trim().length() > 9) {
                lblJobError.setText("Invalid. Must be < 9 chars.");
            }
            lblJobError.setVisible(true);
            result = false;
        }

        if (ftxtHiredate.getText().trim().isEmpty()) {
            lblHiredateError.setText("Invalid. Cannot be empty.");
            lblHiredateError.setVisible(true);
            result = false;
        }

        if (txtSalary.getText().trim().isEmpty() || !(isInteger(txtSalary.getText().trim()) || isDouble(txtSalary.getText().trim()))) {
            if (txtSalary.getText().trim().isEmpty()) {
                lblSalaryError.setText("Invalid. Cannot be empty.");
            } else if (!(isInteger(txtSalary.getText().trim()) || isDouble(txtSalary.getText().trim()))) {
                lblSalaryError.setText("Invalid. Must be number.");
            }
            lblSalaryError.setVisible(true);
            result = false;
        }

        if (txtComm.getText().trim().isEmpty() || !isInteger(txtComm.getText().trim())) {
            if (txtComm.getText().trim().isEmpty()) {
                lblCommError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtComm.getText().trim())) {
                lblCommError.setText("Invalid. Must be integer");
            }
            lblCommError.setVisible(true);
            result = false;
        }

        return result;
    }

    void clearInputBoxes() { // clear for every new entry 
        txtEmpno.setText("");
        txtEname.setText("");
        txtJob.setText("");
        ftxtHiredate.setText("");
        txtSalary.setText("");
        txtComm.setText("");
        cmbDeptno.setSelectedIndex(0);
        cmbMgr.setSelectedIndex(0);
    }

    private boolean isDuplicate(int empno) throws SQLException {
        boolean isduplicate = false;
        String stmtSQL = "SELECT empno FROM emp WHERE empno = " + empno;
        rs = dbCon.executeStatement(stmtSQL);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();

        return isduplicate;
    }
    private void btnAddNewEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewEmpActionPerformed
        // TODO add your handling code here:

        try {
            /*
                * you need also to verify that the empno is unique and not duplicate 
                *
             */
            if (isValidData() && !isDuplicate(Integer.parseInt(txtEmpno.getText().trim()))) {
                // if new employee details are valid, then add new employee to DB

                String prepSQL = "INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) VALUES ("
                        + txtEmpno.getText().trim() + ", "
                        + "'" + txtEname.getText().toUpperCase() + "', "
                        + "'" + txtJob.getText().toUpperCase() + "', "
                        + cmbMgr.getSelectedItem().toString() + ", "
                        + "'" + ftxtHiredate.getText().trim() + "',"
                        + txtSalary.getText() + ","
                        + txtComm.getText() + ","
                        + cmbDeptno.getSelectedItem() + ")";

                int result = dbCon.executePrepared(prepSQL);
                if (result > 0) {

                    javax.swing.JLabel label = new javax.swing.JLabel("New employee added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    clearInputBoxes();
                } else {

                }

                rs.close();
            } else {
                if (!isDuplicate(Integer.parseInt(txtEmpno.getText().trim()))) {
                    javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                } else {
                    javax.swing.JLabel label = new javax.swing.JLabel("Empno Already exists. Use a different employee number.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    // check validation errors 
                }

            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new employee.");
        }
    }//GEN-LAST:event_btnAddNewEmpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewEmp;
    private javax.swing.JComboBox<String> cmbDeptno;
    private javax.swing.JComboBox<String> cmbMgr;
    private javax.swing.JFormattedTextField ftxtHiredate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblCommError;
    private javax.swing.JLabel lblEmpnoError;
    private javax.swing.JLabel lblEnameError;
    private javax.swing.JLabel lblHiredateError;
    private javax.swing.JLabel lblJobError;
    private javax.swing.JLabel lblSalaryError;
    private javax.swing.JTextField txtComm;
    private javax.swing.JTextField txtEmpno;
    private javax.swing.JTextField txtEname;
    private javax.swing.JTextField txtJob;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables
}
